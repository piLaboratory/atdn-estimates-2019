
R version 3.5.2 (2018-12-20) -- "Eggshell Igloo"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R é um software livre e vem sem GARANTIA ALGUMA.
Você pode redistribuí-lo sob certas circunstâncias.
Digite 'license()' ou 'licence()' para detalhes de distribuição.

R é um projeto colaborativo com muitos contribuidores.
Digite 'contributors()' para obter mais informações e
'citation()' para saber como citar o R ou pacotes do R em publicações.

Digite 'demo()' para demonstrações, 'help()' para o sistema on-line de ajuda,
ou 'help.start()' para abrir o sistema de ajuda em HTML no seu navegador.
Digite 'q()' para sair do R.

> library(parallel)
> source("../functions.R")
Carregando pacotes exigidos: stats4
Carregando pacotes exigidos: splines
Carregando pacotes exigidos: bbmle

Attaching package: ‘bbmle’

The following object is masked from ‘package:VGAM’:

    AICc


Attaching package: ‘sads’

The following objects are masked from ‘package:VGAM’:

    dpareto, dzipf, ppareto, pzipf, qpareto, qzipf, rpareto, rzipf

Carregando pacotes exigidos: abc.data
Carregando pacotes exigidos: nnet
Carregando pacotes exigidos: quantreg
Carregando pacotes exigidos: SparseM

Attaching package: ‘SparseM’

The following object is masked from ‘package:base’:

    backsolve

Carregando pacotes exigidos: MASS

Attaching package: ‘MASS’

The following object is masked from ‘package:untb’:

    select

Carregando pacotes exigidos: locfit
locfit 1.5-9.1 	 2013-03-22
> load("../lists_with_all_objects.RData")
> 
> 
> ## Number of cores to use
> mc.cores <- 3
> 
> ################################################################################
> ## Bias of logseries method
> ################################################################################
> ## Checking the relationship between Estimated and real S
> S1 <- round(runif(3, 1e4, 2.5e4))
> 
> sim.ls.rad <- mclapply(S1, sim.rad, N = atdn.13$Tot.t, sad = "ls", nb.fit = atdn.13$y.nb2,
+                           mc.cores = mc.cores, upper = 1e12)
> sim.ls.samp <- mclapply(sim.ls.rad, sim.radsamp, tot.area  = atdn.13$Tot.A,
+                            n.plots = atdn.13$N.plots, lmk.fit = atdn.13$lm.k,
+                            nb.fit = atdn.13$y.nb2, mc.cores = mc.cores)
> sim.ls.estS <- data.frame(S = S1,
+                              S.est.rnd = unlist( mclapply(sim.ls.samp,
+                                                          function(x) ls.estS(x$rnd.samp, N = atdn.13$Tot.t),
+                                                          mc.cores = mc.cores)),
+                              S.est.clump = unlist( mclapply(sim.ls.samp,
+                                                          function(x) ls.estS(x$clump.samp, N = atdn.13$Tot.t),
+                                                          mc.cores = mc.cores))
+                              )
> ## Bias at the range of the confidence interval of the observed estimate ##
> S2 <- round( runif(3, atdn.13$S.ls.ci[1], atdn.13$S.ls.ci[2]) )
> 
> sim.ls.rad.ci <- mclapply(S2, sim.rad, N = atdn.13$Tot.t, sad = "ls", nb.fit = atdn.13$y.nb2,
+                           mc.cores = mc.cores, upper = 1e12)
> 
> sim.ls.samp.ci <- mclapply(sim.ls.rad.ci, sim.radsamp, tot.area  = atdn.13$Tot.A,
+                            n.plots = atdn.13$N.plots, lmk.fit = atdn.13$lm.k,
+                            nb.fit = atdn.13$y.nb2, mc.cores = mc.cores)
> sim.ls.estS.ci <- data.frame(S = S2,
+                              S.est.rnd = unlist( mclapply(sim.ls.samp.ci,
+                                                          function(x) ls.estS(x$rnd.samp, N = atdn.13$Tot.t),
+                                                          mc.cores = mc.cores)),
+                              S.est.clump = unlist( mclapply(sim.ls.samp.ci,
+                                                          function(x) ls.estS(x$clump.samp, N = atdn.13$Tot.t),
+                                                          mc.cores = mc.cores))
+                              )
> 
> 
> ################################################################################
> ## Bias of negative binomial method
> ################################################################################
> f3 <- function(x, size, loglink=TRUE){
+     x <- sort(x[x>0])
+     result <- try(tovo(fitnbinom2(x, start.value=c(size=size, mu=mean(x))),
+                        p=sum(x)/atdn.13$Tot.t, loglink=loglink))
+     if(class(result)=="try-error")
+         return(NA)
+     else
+         return(result)
+ }
> 
> ## Bias over a wide range species richness
> S3 <- round(runif(3, 1e4, 2e4))
> sim.tnb.rad <- mclapply(S3, sim.rad, N = atdn.13$Tot.t, sad = "tnb",
+                                        nb.fit = atdn.13$y.nb2, mc.cores = mc.cores, upper = 1e20)
> sim.tnb.samp <- mclapply(sim.tnb.rad, sim.radsamp, tot.area  = atdn.13$Tot.A,
+                            n.plots = atdn.13$N.plots, lmk.fit = atdn.13$lm.k,
+                            nb.fit = atdn.13$y.nb2, mc.cores = mc.cores)
> sim.tnb.estS <- data.frame(S = S3,
+                               S.est.rnd = unlist(mclapply(sim.tnb.samp,
+                                                           function(x) f3(x$rnd.samp, size = 0.018),
+                                                           mc.cores = mc.cores)),
+                               S.est.clump = sapply(sim.tnb.samp,
+                                                  function(x) f3(x$clump.samp, size = 0.018) )
+                               )
> ## Bias at the range of the confidence interval of the observed estimate ##
> S4 <- round( runif(3, atdn.13$tovo.S$CIs[4,2], atdn.13$tovo.S$CIs[4,1]) )
> 
> sim.tnb.rad.ci <- mclapply(S4, sim.rad, N = atdn.13$Tot.t, sad = "tnb",
+                                        nb.fit = atdn.13$y.nb2, mc.cores = mc.cores, upper = 1e20)
> sim.tnb.samp.ci <- mclapply(sim.tnb.rad.ci, sim.radsamp, tot.area  = atdn.13$Tot.A,
+                            n.plots = atdn.13$N.plots, lmk.fit = atdn.13$lm.k,
+                            nb.fit = atdn.13$y.nb2, mc.cores = mc.cores)
> sim.tnb.estS.ci <- data.frame(S = S4,
+                               S.est.rnd = unlist(mclapply(sim.tnb.samp.ci,
+                                                  function(x) f3(x$rnd.samp, size = 0.018) , mc.cores = mc.cores)),
+                               S.est.clump = unlist(mclapply(sim.tnb.samp,
+                                                             function(x) f3(x$clump.samp, size = 0.018) , mc.cores = mc.cores))
+                               )
> 
> 
> # Storing in lists
> bias13 <- list(
+     ls = list(rads=sim.ls.rad, samples = sim.ls.samp, estimates = sim.ls.estS),
+     ls.ci = list(rads=sim.ls.rad.ci, samples = sim.ls.samp.ci, estimates = sim.ls.estS.ci),
+     tnb= list(rads=sim.tnb.rad, samples = sim.tnb.samp, estimates = sim.tnb.estS),
+     tnb= list(rads=sim.tnb.rad.ci, samples = sim.tnb.samp.ci, estimates = sim.tnb.estS.ci)
+     )
> 
> save(bias13, file = "bias_ls_tnb-2013.RData")
>     
> 
> proc.time()
  usuário   sistema decorrido 
  298.403    12.746   119.737 
