
R version 3.6.0 (2019-04-26) -- "Planting of a Tree"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R é um software livre e vem sem GARANTIA ALGUMA.
Você pode redistribuí-lo sob certas circunstâncias.
Digite 'license()' ou 'licence()' para detalhes de distribuição.

R é um projeto colaborativo com muitos contribuidores.
Digite 'contributors()' para obter mais informações e
'citation()' para saber como citar o R ou pacotes do R em publicações.

Digite 'demo()' para demonstrações, 'help()' para o sistema on-line de ajuda,
ou 'help.start()' para abrir o sistema de ajuda em HTML no seu navegador.
Digite 'q()' para sair do R.

[Área de trabalho anterior carregada]

> ## Expected number of species from simulated samples of
> ## regional SADs with the estimated species richness and upper and lower bounds
> source("functions.R")
Carregando pacotes exigidos: stats4
Carregando pacotes exigidos: splines
Carregando pacotes exigidos: permute
Carregando pacotes exigidos: lattice
Registered S3 method overwritten by 'vegan':
  method       from
  plot.preston untb
This is vegan 2.5-4

Attaching package: ‘vegan’

The following object is masked from ‘package:VGAM’:

    calibrate

Carregando pacotes exigidos: bbmle

Attaching package: ‘bbmle’

The following object is masked from ‘package:VGAM’:

    AICc


Attaching package: ‘sads’

The following objects are masked from ‘package:VGAM’:

    dpareto, dzipf, ppareto, pzipf, qpareto, qzipf, rpareto, rzipf

Carregando pacotes exigidos: abc.data
Carregando pacotes exigidos: nnet
Carregando pacotes exigidos: quantreg
Carregando pacotes exigidos: SparseM

Attaching package: ‘SparseM’

The following object is masked from ‘package:base’:

    backsolve

Carregando pacotes exigidos: MASS

Attaching package: ‘MASS’

The following object is masked from ‘package:untb’:

    select

Carregando pacotes exigidos: locfit
locfit 1.5-9.1 	 2013-03-22
> library(dplyr)

Attaching package: ‘dplyr’

The following object is masked from ‘package:MASS’:

    select

The following object is masked from ‘package:bbmle’:

    slice

The following objects are masked from ‘package:untb’:

    count, select

The following objects are masked from ‘package:stats’:

    filter, lag

The following objects are masked from ‘package:base’:

    intersect, setdiff, setequal, union

> library(tidyr)

Attaching package: ‘tidyr’

The following object is masked from ‘package:VGAM’:

    fill

> ## Basic quantities and original (biased estimates), from script 'dataprep.R'
> load("lists_with_all_objects.RData")
> ## Auxiliary function
> f.sp <- function(n.plots, ...){
+     df <- sp.samp(n.plots=n.plots, ...)
+     c(rnd.mean = mean(df$rnd.samp),clump.mean = mean(df$clump.samp))
+ }
> 
> ## Estimated values: mean of estimatimates by differente methods, weighted by the inverse of thei standard errors
> ## Lower and upper range: minimum and maximum of the range estimates of the different methods
> ## Methods used: LS, LSE, CHAO (all of these bias-corrected) and ABC (no bias correction necessary)
> S1  <- 
+     read.csv("figs_and_tables/estimates_S_table.csv") %>%
+     filter(bias.corrected==TRUE&type!="LSE TNB"&sampling=="clump"&type!="TNB"&dataset=="2019") %>%
+     mutate(se = (IC.up-IC.low)/4)%>%
+     summarise(w.mean = weighted.mean(mean, w=1/se), min=min(IC.low), max=max(IC.up)) %>%    
+     unlist()
> ## Simulated regional SAD
> ls.m <- rad.ls(S = S1[1], N = atdn.19$Tot.t)
> ls.low <- rad.ls(S = S1[2], N = atdn.19$Tot.t)
> ls.up <- rad.ls(S = S1[3], N = atdn.19$Tot.t)
> ## Simulated samples
> n.plots <- ceiling( seq(round(atdn.13.tax$N.plots*.9), 10*atdn.19$N.plots, length=100))
> n.plots <- sort(c(n.plots, atdn.19$N.plots*c(4,8))) # to assure that exactly 4x and 8x the observed number of plots are simulated 
> S.est.mean <- mclapply(n.plots, f.sp,  rad = ls.m$y,
+      tot.area=atdn.19$Tot.A,
+      lmk.fit = atdn.19$lm.k,
+      nb.fit = atdn.19$y.nb2,
+      mc.cores = 7)
> S.est.low <- mclapply(n.plots, f.sp,  rad = ls.low$y,
+      tot.area=atdn.19$Tot.A,
+      lmk.fit = atdn.19$lm.k,
+      nb.fit = atdn.19$y.nb2,
+      mc.cores = 7)
> S.est.upp <- mclapply(n.plots, f.sp,  rad = ls.up$y,
+      tot.area=atdn.19$Tot.A,
+      lmk.fit = atdn.19$lm.k,
+      nb.fit = atdn.19$y.nb2,
+      mc.cores = 7)
> S.proj.19 <- list(n.plots=n.plots, S.est.mean=S.est.mean, S.est.low=S.est.low, S.est.upp=S.est.upp)
> save(S.proj.19, file="richness_extrapolation_19.RData")
> 
> 
> proc.time()
  usuário   sistema decorrido 
21158.502    10.982  3315.531 
