
R version 3.5.3 (2019-03-11) -- "Great Truth"
Copyright (C) 2019 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

[Previously saved workspace restored]

> library(parallel)
> source("../functions.R")
Loading required package: stats4
Loading required package: splines
Loading required package: bbmle

Attaching package: ‘bbmle’

The following object is masked from ‘package:VGAM’:

    AICc


Attaching package: ‘sads’

The following objects are masked from ‘package:VGAM’:

    dpareto, dzipf, ppareto, pzipf, qpareto, qzipf, rpareto, rzipf

Loading required package: abc.data
Loading required package: nnet
Loading required package: quantreg
Loading required package: SparseM

Attaching package: ‘SparseM’

The following object is masked from ‘package:base’:

    backsolve

Loading required package: MASS

Attaching package: ‘MASS’

The following object is masked from ‘package:untb’:

    select

Loading required package: locfit
locfit 1.5-9.1 	 2013-03-22
> load("../lists_with_all_objects.RData")
> 
> 
> ## Number of cores to use
> mc.cores <- 12
> 
> ################################################################################
> ## Bias of logseries method
> ################################################################################
> ## Checking the relationship between Estimated and real S
> S1 <- round(runif(250, 1e4, 2.5e4))
> 
> sim.ls.rad <- mclapply(S1, sim.rad, N = atdn.19$Tot.t, sad = "ls", nb.fit = atdn.19$y.nb2,
+                           mc.cores = mc.cores, upper = 1e12)
> sim.ls.samp <- mclapply(sim.ls.rad, sim.radsamp, tot.area  = atdn.19$Tot.A,
+                            n.plots = atdn.19$N.plots, lmk.fit = atdn.19$lm.k,
+                            nb.fit = atdn.19$y.nb2, mc.cores = mc.cores)
> sim.ls.estS <- data.frame(S = S1,
+                              S.est.rnd = unlist( mclapply(sim.ls.samp,
+                                                          function(x) ls.estS(x$rnd.samp, N = atdn.19$Tot.t),
+                                                          mc.cores = mc.cores)),
+                              S.est.clump = unlist( mclapply(sim.ls.samp,
+                                                          function(x) ls.estS(x$clump.samp, N = atdn.19$Tot.t),
+                                                          mc.cores = mc.cores))
+                              )
> 
> ################################################################################
> ## Bias of negative binomial method
> ################################################################################
> f3 <- function(x, size, loglink=TRUE){
+     x <- sort(x[x>0])
+     result <- try(tovo(fitnbinom2(x, start.value=c(size=size, mu=mean(x))),
+                        p=sum(x)/atdn.19$Tot.t, loglink=loglink))
+     if(class(result)=="try-error")
+         return(NA)
+     else
+         return(result)
+ }
> 
> ## Bias over a wide range species richness
> S3 <- round(runif(100, 5e3, 1.85e4))
> sim.tnb.rad <- mclapply(S3, sim.rad, N = atdn.19$Tot.t, sad = "tnb",
+                                        nb.fit = atdn.19$y.nb2, mc.cores = mc.cores, upper = 1e50)
> sim.tnb.samp <- mclapply(sim.tnb.rad, sim.radsamp, tot.area  = atdn.19$Tot.A,
+                            n.plots = atdn.19$N.plots, lmk.fit = atdn.19$lm.k,
+                            nb.fit = atdn.19$y.nb2, mc.cores = mc.cores)
> sim.tnb.estS <- data.frame(S = S3,
+                               S.est.rnd = unlist(mclapply(sim.tnb.samp,
+                                                           function(x) f3(x$rnd.samp, size = 0.018),
+                                                           mc.cores = mc.cores)),
+                               S.est.clump = sapply(sim.tnb.samp,
+                                                  function(x) f3(x$clump.samp, size = 0.018) )
+                               )
There were 27 warnings (use warnings() to see them)
> 
> # Storing in lists
> bias19 <- list(
+     ls = list(rads=sim.ls.rad, samples = sim.ls.samp, estimates = sim.ls.estS),
+     tnb= list(rads=sim.tnb.rad, samples = sim.tnb.samp, estimates = sim.tnb.estS)
+     )
> 
> save(bias19, file = "bias_ls_tnb_2019.RData")
>     
> 
> proc.time()
     user    system   elapsed 
12378.196   729.092  1995.436 
